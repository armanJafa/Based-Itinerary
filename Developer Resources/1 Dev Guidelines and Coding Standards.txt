WHEN YOU CREATE A FUNCTION:
Make sure the FIRST thing you do is move it to a logical location in the code
For example, if you create a new button in admin page, put the slot for that button under the correct comment heading in primewin.cpp and in primewin.h
(it would be under the comment line, "//Index4=========...")


WORKING WITH GIT:
~ Pick a story to work on,
~ Create a branch for the story,
~ Implement the story in your branch,
~ TRACK THE CHANGES YOU MAKE WITH A SIMPLE CHANGELOG (just write down what you do in a .txt file),
~ SAVE A BACKUP OF YOUR BRANCH
~ Pull to get latest changes into your branch
~ Handle the pull (make sure everything you pulled works, and make sure your implementation works too)
~ When you commit mention your story somewhere with "#25" for example
~ Create a pull request to master when you're done. Xavier will merge your branch.


WHEN YOU COMMIT:
Mention your story somewhere in your commit message. E.g. "#10" for issue 10.


IF YOU DON'T KNOW HOW TO DO SOMETHING:
LABEL THE STORY WITH "question" AND ADD A COMMENT. (on waffle)
Post something in the hangout.


IF THERE'S A TASK YOU CAN'T FINISH:
Label the story "help wanted" and post a comment on waffle
Post something in the hangout as well.


QMESSAGEBOXES LOOK LIKE THIS:
int ret = QMessageBox::warning(this, tr("My Application"),
                               tr("The document has been modified.\n"
                                  "Do you want to save your changes?"),
                               QMessageBox::Save | QMessageBox::Discard
                               | QMessageBox::Cancel,
                               QMessageBox::Save);
qDebug() << ret;
